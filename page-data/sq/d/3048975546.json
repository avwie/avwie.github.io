{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"Compositional Patterns in Kotlin","slug":"/compositional-patterns-in-kotlin","date":"28-Feb 2021","hero":{"childImageSharp":{"fixed":{"src":"/static/7dffa55b1ddac18d357cfc19ee3991ad/44274/hero.jpg"}}}},"excerpt":"Roughly speaking there are two ways to obtain polymorphic behavior in OOP languages, 'classical' inheritance and composition. There are clear benefits in either approach depending on the domain one is trying to model. So this postâ€¦\n"}}]}}}